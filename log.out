Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@7a29e85b
Adding type registration boolean -> org.hibernate.type.BooleanType@7a29e85b
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a29e85b
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5dba312b
Adding type registration true_false -> org.hibernate.type.TrueFalseType@1e57ba00
Adding type registration yes_no -> org.hibernate.type.YesNoType@78d7cacc
Adding type registration byte -> org.hibernate.type.ByteType@317d07e2
Adding type registration byte -> org.hibernate.type.ByteType@317d07e2
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@317d07e2
Adding type registration character -> org.hibernate.type.CharacterType@7d441ee0
Adding type registration char -> org.hibernate.type.CharacterType@7d441ee0
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d441ee0
Adding type registration short -> org.hibernate.type.ShortType@1286144e
Adding type registration short -> org.hibernate.type.ShortType@1286144e
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1286144e
Adding type registration integer -> org.hibernate.type.IntegerType@593bf922
Adding type registration int -> org.hibernate.type.IntegerType@593bf922
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@593bf922
Adding type registration long -> org.hibernate.type.LongType@583c4eec
Adding type registration long -> org.hibernate.type.LongType@583c4eec
Adding type registration java.lang.Long -> org.hibernate.type.LongType@583c4eec
Adding type registration float -> org.hibernate.type.FloatType@34f2845
Adding type registration float -> org.hibernate.type.FloatType@34f2845
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@34f2845
Adding type registration double -> org.hibernate.type.DoubleType@9fd983e
Adding type registration double -> org.hibernate.type.DoubleType@9fd983e
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9fd983e
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d72e3f5
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d72e3f5
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64cb7be
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64cb7be
Adding type registration string -> org.hibernate.type.StringType@554b70f1
Adding type registration java.lang.String -> org.hibernate.type.StringType@554b70f1
Adding type registration url -> org.hibernate.type.UrlType@19c0b50e
Adding type registration java.net.URL -> org.hibernate.type.UrlType@19c0b50e
Adding type registration date -> org.hibernate.type.DateType@68ae0ce5
Adding type registration java.sql.Date -> org.hibernate.type.DateType@68ae0ce5
Adding type registration time -> org.hibernate.type.TimeType@676aa575
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@676aa575
Adding type registration timestamp -> org.hibernate.type.TimestampType@c635b96
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c635b96
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c635b96
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44ceb333
Adding type registration calendar -> org.hibernate.type.CalendarType@35d519a1
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@35d519a1
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@35d519a1
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1659d131
Adding type registration locale -> org.hibernate.type.LocaleType@3781ed38
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3781ed38
Adding type registration currency -> org.hibernate.type.CurrencyType@4c66e7c3
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c66e7c3
Adding type registration timezone -> org.hibernate.type.TimeZoneType@710d21f7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@710d21f7
Adding type registration class -> org.hibernate.type.ClassType@50ee3d2f
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50ee3d2f
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1ea450d3
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1ea450d3
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@413c8def
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@5ea890e8
Adding type registration binary -> org.hibernate.type.BinaryType@7478ace0
Adding type registration byte[] -> org.hibernate.type.BinaryType@7478ace0
Adding type registration [B -> org.hibernate.type.BinaryType@7478ace0
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@34cf6202
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@34cf6202
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@34cf6202
Adding type registration image -> org.hibernate.type.ImageType@20709afd
Adding type registration characters -> org.hibernate.type.CharArrayType@79ef5389
Adding type registration char[] -> org.hibernate.type.CharArrayType@79ef5389
Adding type registration [C -> org.hibernate.type.CharArrayType@79ef5389
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a3ce5f2
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a3ce5f2
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a3ce5f2
Adding type registration text -> org.hibernate.type.TextType@249cee96
Adding type registration blob -> org.hibernate.type.BlobType@619f0432
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@619f0432
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@69fdd9c5
Adding type registration clob -> org.hibernate.type.ClobType@687f1e7c
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@687f1e7c
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1269cee8
Adding type registration serializable -> org.hibernate.type.SerializableType@54432f13
Adding type registration object -> org.hibernate.type.ObjectType@555a86c8
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@555a86c8
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ac47fc3
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ba9c495
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63336a72
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6d0985c5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@449ac5c0
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d22caa
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@794aa618
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58cc2359
HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
HHH000412: Hibernate Core {4.0.1.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: app.cfg.xml
HHH000040: Configuration resource: app.cfg.xml
Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
Located [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd] in classpath
hibernate.connection.driver_class=org.postgresql.Driver
hibernate.connection.url=jdbc:postgresql://ec2-54-235-68-4.compute-1.amazonaws.com:5432/d3o7tuj1qjtjo?username=rgszmooztieyep&password=hh-vm8Nnnf_gp0z4oxyZDI0ot7&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
hibernate.connection.username=rgszmooztieyep
hibernate.connection.password=hh-vm8Nnnf_gp0z4oxyZDI0ot7
connection.pool_size=1
hibernate.show_sql=true
hibernate.hbm2ddl.auto=create
current_session_context_class=thread
cache.provider_class=org.hibernate.cache.NoCacheProvider
Session-factory config [null] named class [com.gamecard.dto.PlaystoreDto] for mapping
Session-factory config [null] named class [com.gamecard.dto.UserInfo] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0, hibernate.connection.url=jdbc:postgresql://ec2-54-235-68-4.compute-1.amazonaws.com:5432/d3o7tuj1qjtjo?username=rgszmooztieyep&password=hh-vm8Nnnf_gp0z4oxyZDI0ot7&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=true, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, hibernate.current_session_context_class=thread, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_91-8u91-b14-3ubuntu1~16.04.1-b14, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, user.name=bridgeit, shared.loader=, tomcat.util.buf.StringCache.byte.enabled=true, current_session_context_class=thread, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.version=1.8.0_91, user.timezone=Asia/Kolkata, sun.arch.data.model=64, java.endorsed.dirs=/home/bridgeit/spring/apache-tomcat-7.0.69/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=IN, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=4.4.0-38-generic, path.separator=:, java.vm.version=25.91-b14, hibernate.connection.password=hh-vm8Nnnf_gp0z4oxyZDI0ot7, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=rgszmooztieyep, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/bridgeit, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=create, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=org.postgresql.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.apache.catalina.startup.Bootstrap start, java.class.path=/home/bridgeit/spring/apache-tomcat-7.0.69/bin/bootstrap.jar:/home/bridgeit/spring/apache-tomcat-7.0.69/bin/tomcat-juli.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=/home/bridgeit/spring/apache-tomcat-7.0.69, sun.cpu.endian=little, sun.os.patch.level=unknown, connection.pool_size=1, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, server.loader=, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/bridgeit/jee-latest-released2/eclipse, line.separator=
, wtp.deploy=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps, java.vm.name=OpenJDK 64-Bit Server VM, cache.provider_class=org.hibernate.cache.NoCacheProvider, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true, hibernate.connection.pool_size=1}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.search.hcore.impl.HibernateSearchIntegrator].
Adding Integrator [org.hibernate.search.hcore.impl.MassIndexerFactoryIntegrator].
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.gamecard.dto.PlaystoreDto
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name PlaystoreDto
Bind entity com.gamecard.dto.PlaystoreDto on table gameplaystore
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=Size, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property Size with lazy=false
building SimpleValue for Size
Building property Size
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=category, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property category with lazy=false
building SimpleValue for category
Building property category
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=gamedate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gamedate with lazy=false
building SimpleValue for gamedate
Building property gamedate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=gametittle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gametittle with lazy=false
building SimpleValue for gametittle
Building property gametittle
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=iconLink, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property iconLink with lazy=false
building SimpleValue for iconLink
Building property iconLink
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=isgame, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isgame with lazy=false
building SimpleValue for isgame
Building property isgame
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=jsonImageVedioLink, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property jsonImageVedioLink with lazy=false
building SimpleValue for jsonImageVedioLink
Building property jsonImageVedioLink
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=packagename, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property packagename with lazy=false
building SimpleValue for packagename
Building property packagename
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=version, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property version with lazy=false
building SimpleValue for version
Building property version
Binding entity from annotated class: com.gamecard.dto.UserInfo
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name UserInfo
Bind entity com.gamecard.dto.UserInfo on table user_info
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=userId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userId with lazy=false
building SimpleValue for userId
Building property userId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=android_version, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property androidVersion with lazy=false
building SimpleValue for androidVersion
Building property androidVersion
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=manufacturer, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property manufacturer with lazy=false
building SimpleValue for manufacturer
Building property manufacturer
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=playstoreDtos_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='playstoreDtos_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.gamecard.dto.UserInfo.playstoreDtos
Building property playstoreDtos
Setting SimpleValue typeName for id
Setting SimpleValue typeName for Size
Setting SimpleValue typeName for category
Setting SimpleValue typeName for description
Setting SimpleValue typeName for gamedate
Setting SimpleValue typeName for gametittle
Setting SimpleValue typeName for iconLink
Setting SimpleValue typeName for isgame
Setting SimpleValue typeName for jsonImageVedioLink
Setting SimpleValue typeName for packagename
Setting SimpleValue typeName for version
Setting SimpleValue typeName for userId
Setting SimpleValue typeName for androidVersion
Setting SimpleValue typeName for manufacturer
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.gamecard.dto.UserInfo.playstoreDtos
Binding as ManyToMany: com.gamecard.dto.UserInfo.playstoreDtos
Mapped collection key: user_info_userId, element: playstoreDtos_id
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.gamecard.dto.PlaystoreDto
Resolving reference to class: com.gamecard.dto.UserInfo
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 1
HHH000006: Autocommit mode: false
HHH000401: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://ec2-54-235-68-4.compute-1.amazonaws.com:5432/d3o7tuj1qjtjo?username=rgszmooztieyep&password=hh-vm8Nnnf_gp0z4oxyZDI0ot7&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory]
HHH000046: Connection properties: {user=rgszmooztieyep, password=hh-vm8Nnnf_gp0z4oxyZDI0ot7}
Opening new JDBC connection
Created connection to: jdbc:postgresql://ec2-54-235-68-4.compute-1.amazonaws.com:5432/d3o7tuj1qjtjo?username=rgszmooztieyep&password=hh-vm8Nnnf_gp0z4oxyZDI0ot7&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory, Isolation Level: 2
Database ->
       name : PostgreSQL
    version : 9.5.4
      major : 9
      minor : 5
Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.3 JDBC4.1 (build 1101)
      major : 9
      minor : 3
JDBC version : 4.0

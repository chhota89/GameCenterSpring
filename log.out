Logging Provider: org.jboss.logging.Log4jLoggerProvider
Adding type registration boolean -> org.hibernate.type.BooleanType@71e5559a
Adding type registration boolean -> org.hibernate.type.BooleanType@71e5559a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71e5559a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@20e79e6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@38915a05
Adding type registration yes_no -> org.hibernate.type.YesNoType@5fb8520
Adding type registration byte -> org.hibernate.type.ByteType@d7f0fd6
Adding type registration byte -> org.hibernate.type.ByteType@d7f0fd6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d7f0fd6
Adding type registration character -> org.hibernate.type.CharacterType@53c8d0b
Adding type registration char -> org.hibernate.type.CharacterType@53c8d0b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53c8d0b
Adding type registration short -> org.hibernate.type.ShortType@30355320
Adding type registration short -> org.hibernate.type.ShortType@30355320
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@30355320
Adding type registration integer -> org.hibernate.type.IntegerType@2fef969e
Adding type registration int -> org.hibernate.type.IntegerType@2fef969e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2fef969e
Adding type registration long -> org.hibernate.type.LongType@19b50e1a
Adding type registration long -> org.hibernate.type.LongType@19b50e1a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19b50e1a
Adding type registration float -> org.hibernate.type.FloatType@493265a7
Adding type registration float -> org.hibernate.type.FloatType@493265a7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@493265a7
Adding type registration double -> org.hibernate.type.DoubleType@4b42d902
Adding type registration double -> org.hibernate.type.DoubleType@4b42d902
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b42d902
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31a95921
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31a95921
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57c5a515
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57c5a515
Adding type registration string -> org.hibernate.type.StringType@661ae4f6
Adding type registration java.lang.String -> org.hibernate.type.StringType@661ae4f6
Adding type registration url -> org.hibernate.type.UrlType@580f4218
Adding type registration java.net.URL -> org.hibernate.type.UrlType@580f4218
Adding type registration date -> org.hibernate.type.DateType@c46a350
Adding type registration java.sql.Date -> org.hibernate.type.DateType@c46a350
Adding type registration time -> org.hibernate.type.TimeType@7e1a0f63
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e1a0f63
Adding type registration timestamp -> org.hibernate.type.TimestampType@428a07a6
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@428a07a6
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@428a07a6
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f250446
Adding type registration calendar -> org.hibernate.type.CalendarType@451fd5a9
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@451fd5a9
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@451fd5a9
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fb5bd90
Adding type registration locale -> org.hibernate.type.LocaleType@724c9ffd
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@724c9ffd
Adding type registration currency -> org.hibernate.type.CurrencyType@1648cc82
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1648cc82
Adding type registration timezone -> org.hibernate.type.TimeZoneType@560262cb
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@560262cb
Adding type registration class -> org.hibernate.type.ClassType@31b132d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31b132d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e5148b4
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e5148b4
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e72b6
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3fce474
Adding type registration binary -> org.hibernate.type.BinaryType@49fe1b73
Adding type registration byte[] -> org.hibernate.type.BinaryType@49fe1b73
Adding type registration [B -> org.hibernate.type.BinaryType@49fe1b73
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71afe3b1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71afe3b1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71afe3b1
Adding type registration image -> org.hibernate.type.ImageType@2eebb285
Adding type registration characters -> org.hibernate.type.CharArrayType@1401f19a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1401f19a
Adding type registration [C -> org.hibernate.type.CharArrayType@1401f19a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b535583
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b535583
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b535583
Adding type registration text -> org.hibernate.type.TextType@7960cd24
Adding type registration blob -> org.hibernate.type.BlobType@37a375da
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37a375da
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63cdf877
Adding type registration clob -> org.hibernate.type.ClobType@477a7080
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@477a7080
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53897f23
Adding type registration serializable -> org.hibernate.type.SerializableType@6fe8980e
Adding type registration object -> org.hibernate.type.ObjectType@254ed71e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@254ed71e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b4b2d4f
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@786ef91f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@729af5ec
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ddc9c30
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f8ffd91
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50a6417e
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7536eb13
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c42d499
HCANN000001: Hibernate Commons Annotations {4.0.1.Final}
HHH000412: Hibernate Core {4.0.1.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000043: Configuring from resource: app.cfg.xml
HHH000040: Configuration resource: app.cfg.xml
Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
Attempting to resolve on classpath under org/hibernate/
Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
hibernate.connection.driver_class=com.mysql.jdbc.Driver
hibernate.connection.username=root
hibernate.connection.password=bridgeit
hibernate.connection.url=jdbc:mysql://localhost:3306/game_center
hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.hbm2ddl.auto=update
hibernate.show_sql=true
Session-factory config [null] named class [com.gamecard.dto.PlaystoreDto] for mapping
Session-factory config [null] named class [com.gamecard.dto.UserInfo] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0, hibernate.connection.url=jdbc:mysql://localhost:3306/game_center, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=true, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_91-8u91-b14-3ubuntu1~16.04.1-b14, user.name=bridgeit, shared.loader=, tomcat.util.buf.StringCache.byte.enabled=true, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.version=1.8.0_91, user.timezone=Asia/Kolkata, sun.arch.data.model=64, java.endorsed.dirs=/home/bridgeit/spring/apache-tomcat-7.0.69/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=IN, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=4.4.0-34-generic, path.separator=:, java.vm.version=25.91-b14, hibernate.connection.password=bridgeit, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/bridgeit, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.apache.catalina.startup.Bootstrap start, java.class.path=/home/bridgeit/spring/apache-tomcat-7.0.69/bin/bootstrap.jar:/home/bridgeit/spring/apache-tomcat-7.0.69/bin/tomcat-juli.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=/home/bridgeit/spring/apache-tomcat-7.0.69, sun.cpu.endian=little, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, server.loader=, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/bridgeit/jee-latest-released2/eclipse, line.separator=
, wtp.deploy=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.search.hcore.impl.HibernateSearchIntegrator].
Adding Integrator [org.hibernate.search.hcore.impl.MassIndexerFactoryIntegrator].
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.gamecard.dto.PlaystoreDto
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name PlaystoreDto
Bind entity com.gamecard.dto.PlaystoreDto on table gameplaystore
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=Size, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property Size with lazy=false
building SimpleValue for Size
Building property Size
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=category, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property category with lazy=false
building SimpleValue for category
Building property category
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=gamedate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gamedate with lazy=false
building SimpleValue for gamedate
Building property gamedate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=gametittle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gametittle with lazy=false
building SimpleValue for gametittle
Building property gametittle
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=iconLink, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property iconLink with lazy=false
building SimpleValue for iconLink
Building property iconLink
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=isgame, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isgame with lazy=false
building SimpleValue for isgame
Building property isgame
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=jsonImageVedioLink, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property jsonImageVedioLink with lazy=false
building SimpleValue for jsonImageVedioLink
Building property jsonImageVedioLink
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=packagename, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property packagename with lazy=false
building SimpleValue for packagename
Building property packagename
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=version, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property version with lazy=false
building SimpleValue for version
Building property version
Binding entity from annotated class: com.gamecard.dto.UserInfo
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name UserInfo
Bind entity com.gamecard.dto.UserInfo on table user_info
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=userId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userId with lazy=false
building SimpleValue for userId
Building property userId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=android_version, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property androidVersion with lazy=false
building SimpleValue for androidVersion
Building property androidVersion
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=manufacturer, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property manufacturer with lazy=false
building SimpleValue for manufacturer
Building property manufacturer
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=playstoreDtos_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='playstoreDtos_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.gamecard.dto.UserInfo.playstoreDtos
Building property playstoreDtos
Setting SimpleValue typeName for id
Setting SimpleValue typeName for Size
Setting SimpleValue typeName for category
Setting SimpleValue typeName for description
Setting SimpleValue typeName for gamedate
Setting SimpleValue typeName for gametittle
Setting SimpleValue typeName for iconLink
Setting SimpleValue typeName for isgame
Setting SimpleValue typeName for jsonImageVedioLink
Setting SimpleValue typeName for packagename
Setting SimpleValue typeName for version
Setting SimpleValue typeName for userId
Setting SimpleValue typeName for androidVersion
Setting SimpleValue typeName for manufacturer
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.gamecard.dto.UserInfo.playstoreDtos
Binding as ManyToMany: com.gamecard.dto.UserInfo.playstoreDtos
Mapped collection key: user_info_userId, element: playstoreDtos_id
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.gamecard.dto.PlaystoreDto
Resolving reference to class: com.gamecard.dto.UserInfo
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: false
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/game_center]
HHH000046: Connection properties: {user=root, password=bridgeit}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/game_center, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.7.13-0ubuntu0.16.04.2
      major : 5
      minor : 7
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.30 ( Revision: alexander.soklakov@oracle.com-20140310090514-8xt1yoht5ksg2e7c )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
multi-tenancy strategy : NONE
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0, hibernate.connection.url=jdbc:mysql://localhost:3306/game_center, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=true, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_91-8u91-b14-3ubuntu1~16.04.1-b14, user.name=bridgeit, shared.loader=, tomcat.util.buf.StringCache.byte.enabled=true, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.version=1.8.0_91, user.timezone=Asia/Kolkata, sun.arch.data.model=64, java.endorsed.dirs=/home/bridgeit/spring/apache-tomcat-7.0.69/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=IN, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=4.4.0-34-generic, path.separator=:, java.vm.version=25.91-b14, hibernate.connection.password=bridgeit, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/bridgeit, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/lib,/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/lib/*.jar,/home/bridgeit/spring/apache-tomcat-7.0.69/lib,/home/bridgeit/spring/apache-tomcat-7.0.69/lib/*.jar, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.apache.catalina.startup.Bootstrap start, java.class.path=/home/bridgeit/spring/apache-tomcat-7.0.69/bin/bootstrap.jar:/home/bridgeit/spring/apache-tomcat-7.0.69/bin/tomcat-juli.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=/home/bridgeit/spring/apache-tomcat-7.0.69, sun.cpu.endian=little, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, server.loader=, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/bridgeit/jee-latest-released2/eclipse, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, wtp.deploy=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
HSEARCH000034: Hibernate Search 4.3.0.Final
HSEARCH000075: Configuration setting hibernate.search.lucene_version was not specified, using LUCENE_CURRENT.
Using default similarity implementation: org.apache.lucene.search.DefaultSimilarity
Hibernate Search event listeners deactivated
Hibernate Search dirty checks enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.gamecard.dto.UserInfo
 Version select: select userId from user_info where userId =?
 Snapshot select: select userinfo_.userId, userinfo_.android_version as android2_1_, userinfo_.manufacturer as manufact3_1_ from user_info userinfo_ where userinfo_.userId=?
 Insert 0: insert into user_info (android_version, manufacturer, userId) values (?, ?, ?)
 Update 0: update user_info set android_version=?, manufacturer=? where userId=?
 Delete 0: delete from user_info where userId=?
Static SQL for entity: com.gamecard.dto.PlaystoreDto
 Version select: select id from gameplaystore where id =?
 Snapshot select: select playstored_.id, playstored_.Size as Size0_, playstored_.category as category0_, playstored_.description as descript4_0_, playstored_.gamedate as gamedate0_, playstored_.gametittle as gametittle0_, playstored_.iconLink as iconLink0_, playstored_.isgame as isgame0_, playstored_.jsonImageVedioLink as jsonImag9_0_, playstored_.packagename as package10_0_, playstored_.version as version0_ from gameplaystore playstored_ where playstored_.id=?
 Insert 0: insert into gameplaystore (Size, category, description, gamedate, gametittle, iconLink, isgame, jsonImageVedioLink, packagename, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update gameplaystore set Size=?, category=?, description=?, gamedate=?, gametittle=?, iconLink=?, isgame=?, jsonImageVedioLink=?, packagename=?, version=? where id=?
 Delete 0: delete from gameplaystore where id=?
 Identity insert: insert into gameplaystore (Size, category, description, gamedate, gametittle, iconLink, isgame, jsonImageVedioLink, packagename, version) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Static SQL for collection: com.gamecard.dto.UserInfo.playstoreDtos
 Row insert: insert into user_info_gameplaystore (user_info_userId, playstoreDtos_id) values (?, ?)
 Row update: update user_info_gameplaystore set playstoreDtos_id=? where user_info_userId=? and playstoreDtos_id=?
 Row delete: delete from user_info_gameplaystore where user_info_userId=? and playstoreDtos_id=?
 One-shot delete: delete from user_info_gameplaystore where user_info_userId=?
Static select for entity com.gamecard.dto.UserInfo [NONE]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for entity com.gamecard.dto.UserInfo [READ]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for entity com.gamecard.dto.UserInfo [UPGRADE]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [UPGRADE_NOWAIT]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [FORCE]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [PESSIMISTIC_READ]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=? lock in share mode
Static select for entity com.gamecard.dto.UserInfo [PESSIMISTIC_WRITE]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [PESSIMISTIC_FORCE_INCREMENT]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [OPTIMISTIC]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for entity com.gamecard.dto.UserInfo [OPTIMISTIC_FORCE_INCREMENT]: select userinfo0_.userId as userId1_0_, userinfo0_.android_version as android2_1_0_, userinfo0_.manufacturer as manufact3_1_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for action ACTION_MERGE on entity com.gamecard.dto.UserInfo: select userinfo0_.userId as userId1_1_, userinfo0_.android_version as android2_1_1_, userinfo0_.manufacturer as manufact3_1_1_, playstored1_.user_info_userId as user1_1_3_, playstored2_.id as playstor2_3_, playstored2_.id as id0_0_, playstored2_.Size as Size0_0_, playstored2_.category as category0_0_, playstored2_.description as descript4_0_0_, playstored2_.gamedate as gamedate0_0_, playstored2_.gametittle as gametittle0_0_, playstored2_.iconLink as iconLink0_0_, playstored2_.isgame as isgame0_0_, playstored2_.jsonImageVedioLink as jsonImag9_0_0_, playstored2_.packagename as package10_0_0_, playstored2_.version as version0_0_ from user_info userinfo0_ left outer join user_info_gameplaystore playstored1_ on userinfo0_.userId=playstored1_.user_info_userId left outer join gameplaystore playstored2_ on playstored1_.playstoreDtos_id=playstored2_.id where userinfo0_.userId=?
Static select for action ACTION_REFRESH on entity com.gamecard.dto.UserInfo: select userinfo0_.userId as userId1_1_, userinfo0_.android_version as android2_1_1_, userinfo0_.manufacturer as manufact3_1_1_, playstored1_.user_info_userId as user1_1_3_, playstored2_.id as playstor2_3_, playstored2_.id as id0_0_, playstored2_.Size as Size0_0_, playstored2_.category as category0_0_, playstored2_.description as descript4_0_0_, playstored2_.gamedate as gamedate0_0_, playstored2_.gametittle as gametittle0_0_, playstored2_.iconLink as iconLink0_0_, playstored2_.isgame as isgame0_0_, playstored2_.jsonImageVedioLink as jsonImag9_0_0_, playstored2_.packagename as package10_0_0_, playstored2_.version as version0_0_ from user_info userinfo0_ left outer join user_info_gameplaystore playstored1_ on userinfo0_.userId=playstored1_.user_info_userId left outer join gameplaystore playstored2_ on playstored1_.playstoreDtos_id=playstored2_.id where userinfo0_.userId=?
Static select for entity com.gamecard.dto.PlaystoreDto [NONE]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for entity com.gamecard.dto.PlaystoreDto [READ]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for entity com.gamecard.dto.PlaystoreDto [UPGRADE]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [UPGRADE_NOWAIT]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [FORCE]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [PESSIMISTIC_READ]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=? lock in share mode
Static select for entity com.gamecard.dto.PlaystoreDto [PESSIMISTIC_WRITE]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [PESSIMISTIC_FORCE_INCREMENT]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [OPTIMISTIC]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for entity com.gamecard.dto.PlaystoreDto [OPTIMISTIC_FORCE_INCREMENT]: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for action ACTION_MERGE on entity com.gamecard.dto.PlaystoreDto: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for action ACTION_REFRESH on entity com.gamecard.dto.PlaystoreDto: select playstored0_.id as id0_0_, playstored0_.Size as Size0_0_, playstored0_.category as category0_0_, playstored0_.description as descript4_0_0_, playstored0_.gamedate as gamedate0_0_, playstored0_.gametittle as gametittle0_0_, playstored0_.iconLink as iconLink0_0_, playstored0_.isgame as isgame0_0_, playstored0_.jsonImageVedioLink as jsonImag9_0_0_, playstored0_.packagename as package10_0_0_, playstored0_.version as version0_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for collection com.gamecard.dto.UserInfo.playstoreDtos: select playstored0_.user_info_userId as user1_1_1_, playstored0_.playstoreDtos_id as playstor2_1_, playstored1_.id as id0_0_, playstored1_.Size as Size0_0_, playstored1_.category as category0_0_, playstored1_.description as descript4_0_0_, playstored1_.gamedate as gamedate0_0_, playstored1_.gametittle as gametittle0_0_, playstored1_.iconLink as iconLink0_0_, playstored1_.isgame as isgame0_0_, playstored1_.jsonImageVedioLink as jsonImag9_0_0_, playstored1_.packagename as package10_0_0_, playstored1_.version as version0_0_ from user_info_gameplaystore playstored0_ inner join gameplaystore playstored1_ on playstored0_.playstoreDtos_id=playstored1_.id where playstored0_.user_info_userId=?
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2150a8d7
Registering SessionFactory: 2a2c74e9-e2cf-4c33-bcb6-6c60e21cd0b6 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.gamecard.dto.PlaystoreDto
Resolving reference to class: com.gamecard.dto.UserInfo
HHH000261: Table found: game_center.gameplaystore
HHH000037: Columns: [gametittle, gamedate, size, packagename, description, jsonimagevediolink, id, category, iconlink, isgame, version]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: game_center.user_info
HHH000037: Columns: [android_version, userid, manufacturer]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: game_center.user_info_gameplaystore
HHH000037: Columns: [playstoredtos_id, user_info_userid]
HHH000108: Foreign keys: [fkf057399e139ec879, fkf057399e164c228a]
HHH000126: Indexes: [fkf057399e139ec879, fkf057399e164c228a]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
Opened session at timestamp: 14734793087
Adding type registration boolean -> org.hibernate.type.BooleanType@71e5559a
Adding type registration boolean -> org.hibernate.type.BooleanType@71e5559a
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71e5559a
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@20e79e6
Adding type registration true_false -> org.hibernate.type.TrueFalseType@38915a05
Adding type registration yes_no -> org.hibernate.type.YesNoType@5fb8520
Adding type registration byte -> org.hibernate.type.ByteType@d7f0fd6
Adding type registration byte -> org.hibernate.type.ByteType@d7f0fd6
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@d7f0fd6
Adding type registration character -> org.hibernate.type.CharacterType@53c8d0b
Adding type registration char -> org.hibernate.type.CharacterType@53c8d0b
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@53c8d0b
Adding type registration short -> org.hibernate.type.ShortType@30355320
Adding type registration short -> org.hibernate.type.ShortType@30355320
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@30355320
Adding type registration integer -> org.hibernate.type.IntegerType@2fef969e
Adding type registration int -> org.hibernate.type.IntegerType@2fef969e
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2fef969e
Adding type registration long -> org.hibernate.type.LongType@19b50e1a
Adding type registration long -> org.hibernate.type.LongType@19b50e1a
Adding type registration java.lang.Long -> org.hibernate.type.LongType@19b50e1a
Adding type registration float -> org.hibernate.type.FloatType@493265a7
Adding type registration float -> org.hibernate.type.FloatType@493265a7
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@493265a7
Adding type registration double -> org.hibernate.type.DoubleType@4b42d902
Adding type registration double -> org.hibernate.type.DoubleType@4b42d902
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b42d902
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@31a95921
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@31a95921
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@57c5a515
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@57c5a515
Adding type registration string -> org.hibernate.type.StringType@661ae4f6
Adding type registration java.lang.String -> org.hibernate.type.StringType@661ae4f6
Adding type registration url -> org.hibernate.type.UrlType@580f4218
Adding type registration java.net.URL -> org.hibernate.type.UrlType@580f4218
Adding type registration date -> org.hibernate.type.DateType@c46a350
Adding type registration java.sql.Date -> org.hibernate.type.DateType@c46a350
Adding type registration time -> org.hibernate.type.TimeType@7e1a0f63
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7e1a0f63
Adding type registration timestamp -> org.hibernate.type.TimestampType@428a07a6
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@428a07a6
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@428a07a6
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f250446
Adding type registration calendar -> org.hibernate.type.CalendarType@451fd5a9
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@451fd5a9
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@451fd5a9
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fb5bd90
Adding type registration locale -> org.hibernate.type.LocaleType@724c9ffd
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@724c9ffd
Adding type registration currency -> org.hibernate.type.CurrencyType@1648cc82
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1648cc82
Adding type registration timezone -> org.hibernate.type.TimeZoneType@560262cb
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@560262cb
Adding type registration class -> org.hibernate.type.ClassType@31b132d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31b132d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e5148b4
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e5148b4
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e72b6
Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3fce474
Adding type registration binary -> org.hibernate.type.BinaryType@49fe1b73
Adding type registration byte[] -> org.hibernate.type.BinaryType@49fe1b73
Adding type registration [B -> org.hibernate.type.BinaryType@49fe1b73
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71afe3b1
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71afe3b1
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71afe3b1
Adding type registration image -> org.hibernate.type.ImageType@2eebb285
Adding type registration characters -> org.hibernate.type.CharArrayType@1401f19a
Adding type registration char[] -> org.hibernate.type.CharArrayType@1401f19a
Adding type registration [C -> org.hibernate.type.CharArrayType@1401f19a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b535583
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b535583
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b535583
Adding type registration text -> org.hibernate.type.TextType@7960cd24
Adding type registration blob -> org.hibernate.type.BlobType@37a375da
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37a375da
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63cdf877
Adding type registration clob -> org.hibernate.type.ClobType@477a7080
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@477a7080
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53897f23
Adding type registration serializable -> org.hibernate.type.SerializableType@6fe8980e
Adding type registration object -> org.hibernate.type.ObjectType@254ed71e
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@254ed71e
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a501150
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ec8019b
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1b9f493d
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18e8ff8e
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7258b752
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cd2a45b
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5d65d45d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22e44f0
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH000044: Configuring from URL: file:/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/GameCardProgram/WEB-INF/classes/app.cfg.xml
Trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
Attempting to resolve on classpath under org/hibernate/
Located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
hibernate.connection.driver_class=com.mysql.jdbc.Driver
hibernate.connection.username=root
hibernate.connection.password=bridgeit
hibernate.connection.url=jdbc:mysql://localhost:3306/game_center
hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.hbm2ddl.auto=update
hibernate.show_sql=true
Session-factory config [null] named class [com.gamecard.dto.PlaystoreDto] for mapping
Session-factory config [null] named class [com.gamecard.dto.UserInfo] for mapping
HHH000041: Configured SessionFactory: null
Properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0, hibernate.connection.url=jdbc:mysql://localhost:3306/game_center, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=true, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_91-8u91-b14-3ubuntu1~16.04.1-b14, user.name=bridgeit, shared.loader=, tomcat.util.buf.StringCache.byte.enabled=true, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.version=1.8.0_91, user.timezone=Asia/Kolkata, sun.arch.data.model=64, java.endorsed.dirs=/home/bridgeit/spring/apache-tomcat-7.0.69/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=IN, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=4.4.0-34-generic, path.separator=:, java.vm.version=25.91-b14, hibernate.connection.password=bridgeit, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/bridgeit, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, hibernate.classLoader.application=WebappClassLoader
  context: /GameCard
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
java.net.URLClassLoader@27716f4
, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.apache.catalina.startup.Bootstrap start, java.class.path=/home/bridgeit/spring/apache-tomcat-7.0.69/bin/bootstrap.jar:/home/bridgeit/spring/apache-tomcat-7.0.69/bin/tomcat-juli.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=/home/bridgeit/spring/apache-tomcat-7.0.69, sun.cpu.endian=little, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, server.loader=, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/bridgeit/jee-latest-released2/eclipse, line.separator=
, wtp.deploy=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.search.hcore.impl.HibernateSearchIntegrator].
Adding Integrator [org.hibernate.search.hcore.impl.MassIndexerFactoryIntegrator].
Preparing to build session factory with filters : {}
Processing hbm.xml files
Process annotated classes
Binding entity from annotated class: com.gamecard.dto.PlaystoreDto
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name PlaystoreDto
Bind entity com.gamecard.dto.PlaystoreDto on table gameplaystore
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=Size, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property Size with lazy=false
building SimpleValue for Size
Building property Size
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=category, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property category with lazy=false
building SimpleValue for category
Building property category
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=description, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property description with lazy=false
building SimpleValue for description
Building property description
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=gamedate, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gamedate with lazy=false
building SimpleValue for gamedate
Building property gamedate
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=gametittle, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gametittle with lazy=false
building SimpleValue for gametittle
Building property gametittle
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=iconLink, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property iconLink with lazy=false
building SimpleValue for iconLink
Building property iconLink
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=isgame, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property isgame with lazy=false
building SimpleValue for isgame
Building property isgame
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=jsonImageVedioLink, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property jsonImageVedioLink with lazy=false
building SimpleValue for jsonImageVedioLink
Building property jsonImageVedioLink
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=packagename, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property packagename with lazy=false
building SimpleValue for packagename
Building property packagename
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(gameplaystore), mappingColumn=version, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property version with lazy=false
building SimpleValue for version
Building property version
Binding entity from annotated class: com.gamecard.dto.UserInfo
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
No value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
Import with entity name UserInfo
Bind entity com.gamecard.dto.UserInfo on table user_info
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=userId, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property userId with lazy=false
building SimpleValue for userId
Building property userId
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=android_version, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property androidVersion with lazy=false
building SimpleValue for androidVersion
Building property androidVersion
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=manufacturer, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property manufacturer with lazy=false
building SimpleValue for manufacturer
Building property manufacturer
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_info), mappingColumn=playstoreDtos_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='playstoreDtos_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: com.gamecard.dto.UserInfo.playstoreDtos
Building property playstoreDtos
Setting SimpleValue typeName for id
Setting SimpleValue typeName for Size
Setting SimpleValue typeName for category
Setting SimpleValue typeName for description
Setting SimpleValue typeName for gamedate
Setting SimpleValue typeName for gametittle
Setting SimpleValue typeName for iconLink
Setting SimpleValue typeName for isgame
Setting SimpleValue typeName for jsonImageVedioLink
Setting SimpleValue typeName for packagename
Setting SimpleValue typeName for version
Setting SimpleValue typeName for userId
Setting SimpleValue typeName for androidVersion
Setting SimpleValue typeName for manufacturer
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Second pass for collection: com.gamecard.dto.UserInfo.playstoreDtos
Binding as ManyToMany: com.gamecard.dto.UserInfo.playstoreDtos
Mapped collection key: user_info_userId, element: playstoreDtos_id
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.gamecard.dto.PlaystoreDto
Resolving reference to class: com.gamecard.dto.UserInfo
HHH000402: Using Hibernate built-in connection pool (not for production use!)
HHH000115: Hibernate connection pool size: 20
HHH000006: Autocommit mode: false
HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/game_center]
HHH000046: Connection properties: {user=root, password=bridgeit}
Opening new JDBC connection
Created connection to: jdbc:mysql://localhost:3306/game_center, Isolation Level: 4
Database ->
       name : MySQL
    version : 5.7.13-0ubuntu0.16.04.2
      major : 5
      minor : 7
Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.30 ( Revision: alexander.soklakov@oracle.com-20140310090514-8xt1yoht5ksg2e7c )
      major : 5
      minor : 1
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Automatic flush during beforeCompletion(): disabled
Automatic session close at end of transaction: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: disabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
Connection release mode: auto
HHH000399: Using default transaction strategy (direct JDBC transactions)
Maximum outer join fetch depth: 2
Default batch fetch size: 1
Generate SQL with comments: disabled
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
HHH000397: Using ASTQueryTranslatorFactory
Query language substitutions: {}
JPA-QL strict compliance: disabled
Second-level cache: enabled
Query cache: disabled
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
Optimize cache for minimal puts: disabled
Structured second-level cache entries: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Named query checking : enabled
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
multi-tenancy strategy : NONE
Building session factory
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, catalina.base=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0, hibernate.connection.url=jdbc:mysql://localhost:3306/game_center, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, catalina.useNaming=true, os.name=Linux, sun.boot.class.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, sun.desktop=gnome, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_91-8u91-b14-3ubuntu1~16.04.1-b14, user.name=bridgeit, shared.loader=, tomcat.util.buf.StringCache.byte.enabled=true, user.language=en, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, sun.boot.library.path=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64, java.version=1.8.0_91, user.timezone=Asia/Kolkata, sun.arch.data.model=64, java.endorsed.dirs=/home/bridgeit/spring/apache-tomcat-7.0.69/endorsed, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, file.encoding.pkg=sun.io, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.resources.,org.apache.tomcat., file.separator=/, java.specification.name=Java Platform API Specification, java.class.version=52.0, user.country=IN, java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre, java.vm.info=mixed mode, os.version=4.4.0-34-generic, path.separator=:, java.vm.version=25.91-b14, hibernate.connection.password=bridgeit, java.awt.printerjob=sun.print.PSPrinterJob, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.scan.DefaultJarScanner.jarsToSkip=bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-tribes.jar,jasper.jar,jasper-el.jar,ecj-*.jar,tomcat-api.jar,tomcat-util.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,tomcat-jdbc.jar,tools.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,jstl.jar,taglibs-standard-spec-*.jar,geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,jmx-tools.jar,jta*.jar,log4j.jar,log4j-1*.jar,mail*.jar,slf4j*.jar,xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,junit.jar,junit-*.jar,hamcrest*.jar,org.hamcrest*.jar,ant-launcher.jar,cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,xom-*.jar, awt.toolkit=sun.awt.X11.XToolkit, hibernate.connection.username=root, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., java.naming.factory.url.pkgs=org.apache.naming, user.home=/home/bridgeit, org.apache.catalina.startup.ContextConfig.jarsToSkip=, java.specification.vendor=Oracle Corporation, hibernate.hbm2ddl.auto=update, hibernate.classLoader.application=WebappClassLoader
  context: /GameCard
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
java.net.URLClassLoader@27716f4
, java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.jdbc.Driver, org.apache.catalina.startup.TldConfig.jarsToSkip=tomcat7-websocket.jar, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQLDialect, common.loader=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/lib,/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/lib/*.jar,/home/bridgeit/spring/apache-tomcat-7.0.69/lib,/home/bridgeit/spring/apache-tomcat-7.0.69/lib/*.jar, java.runtime.name=OpenJDK Runtime Environment, sun.java.command=org.apache.catalina.startup.Bootstrap start, java.class.path=/home/bridgeit/spring/apache-tomcat-7.0.69/bin/bootstrap.jar:/home/bridgeit/spring/apache-tomcat-7.0.69/bin/tomcat-juli.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, catalina.home=/home/bridgeit/spring/apache-tomcat-7.0.69, sun.cpu.endian=little, sun.os.patch.level=unknown, java.io.tmpdir=/tmp, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, server.loader=, os.arch=amd64, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.ext.dirs=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext, user.dir=/home/bridgeit/jee-latest-released2/eclipse, line.separator=
, java.vm.name=OpenJDK 64-Bit Server VM, wtp.deploy=/home/bridgeit/springPractice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=true}
HSEARCH000075: Configuration setting hibernate.search.lucene_version was not specified, using LUCENE_CURRENT.
Using default similarity implementation: org.apache.lucene.search.DefaultSimilarity
Hibernate Search event listeners deactivated
Hibernate Search dirty checks enabled
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Static SQL for entity: com.gamecard.dto.UserInfo
 Version select: select userId from user_info where userId =?
 Snapshot select: select userinfo_.userId, userinfo_.android_version as android2_6_, userinfo_.manufacturer as manufact3_6_ from user_info userinfo_ where userinfo_.userId=?
 Insert 0: insert into user_info (android_version, manufacturer, userId) values (?, ?, ?)
 Update 0: update user_info set android_version=?, manufacturer=? where userId=?
 Delete 0: delete from user_info where userId=?
Static SQL for entity: com.gamecard.dto.PlaystoreDto
 Version select: select id from gameplaystore where id =?
 Snapshot select: select playstored_.id, playstored_.Size as Size5_, playstored_.category as category5_, playstored_.description as descript4_5_, playstored_.gamedate as gamedate5_, playstored_.gametittle as gametittle5_, playstored_.iconLink as iconLink5_, playstored_.isgame as isgame5_, playstored_.jsonImageVedioLink as jsonImag9_5_, playstored_.packagename as package10_5_, playstored_.version as version5_ from gameplaystore playstored_ where playstored_.id=?
 Insert 0: insert into gameplaystore (Size, category, description, gamedate, gametittle, iconLink, isgame, jsonImageVedioLink, packagename, version, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
 Update 0: update gameplaystore set Size=?, category=?, description=?, gamedate=?, gametittle=?, iconLink=?, isgame=?, jsonImageVedioLink=?, packagename=?, version=? where id=?
 Delete 0: delete from gameplaystore where id=?
 Identity insert: insert into gameplaystore (Size, category, description, gamedate, gametittle, iconLink, isgame, jsonImageVedioLink, packagename, version) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Static SQL for collection: com.gamecard.dto.UserInfo.playstoreDtos
 Row insert: insert into user_info_gameplaystore (user_info_userId, playstoreDtos_id) values (?, ?)
 Row update: update user_info_gameplaystore set playstoreDtos_id=? where user_info_userId=? and playstoreDtos_id=?
 Row delete: delete from user_info_gameplaystore where user_info_userId=? and playstoreDtos_id=?
 One-shot delete: delete from user_info_gameplaystore where user_info_userId=?
Static select for entity com.gamecard.dto.UserInfo [NONE]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for entity com.gamecard.dto.UserInfo [READ]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for entity com.gamecard.dto.UserInfo [UPGRADE]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [UPGRADE_NOWAIT]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [FORCE]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [PESSIMISTIC_READ]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=? lock in share mode
Static select for entity com.gamecard.dto.UserInfo [PESSIMISTIC_WRITE]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [PESSIMISTIC_FORCE_INCREMENT]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=? for update
Static select for entity com.gamecard.dto.UserInfo [OPTIMISTIC]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for entity com.gamecard.dto.UserInfo [OPTIMISTIC_FORCE_INCREMENT]: select userinfo0_.userId as userId6_0_, userinfo0_.android_version as android2_6_0_, userinfo0_.manufacturer as manufact3_6_0_ from user_info userinfo0_ where userinfo0_.userId=?
Static select for action ACTION_MERGE on entity com.gamecard.dto.UserInfo: select userinfo0_.userId as userId6_1_, userinfo0_.android_version as android2_6_1_, userinfo0_.manufacturer as manufact3_6_1_, playstored1_.user_info_userId as user1_6_3_, playstored2_.id as playstor2_3_, playstored2_.id as id5_0_, playstored2_.Size as Size5_0_, playstored2_.category as category5_0_, playstored2_.description as descript4_5_0_, playstored2_.gamedate as gamedate5_0_, playstored2_.gametittle as gametittle5_0_, playstored2_.iconLink as iconLink5_0_, playstored2_.isgame as isgame5_0_, playstored2_.jsonImageVedioLink as jsonImag9_5_0_, playstored2_.packagename as package10_5_0_, playstored2_.version as version5_0_ from user_info userinfo0_ left outer join user_info_gameplaystore playstored1_ on userinfo0_.userId=playstored1_.user_info_userId left outer join gameplaystore playstored2_ on playstored1_.playstoreDtos_id=playstored2_.id where userinfo0_.userId=?
Static select for action ACTION_REFRESH on entity com.gamecard.dto.UserInfo: select userinfo0_.userId as userId6_1_, userinfo0_.android_version as android2_6_1_, userinfo0_.manufacturer as manufact3_6_1_, playstored1_.user_info_userId as user1_6_3_, playstored2_.id as playstor2_3_, playstored2_.id as id5_0_, playstored2_.Size as Size5_0_, playstored2_.category as category5_0_, playstored2_.description as descript4_5_0_, playstored2_.gamedate as gamedate5_0_, playstored2_.gametittle as gametittle5_0_, playstored2_.iconLink as iconLink5_0_, playstored2_.isgame as isgame5_0_, playstored2_.jsonImageVedioLink as jsonImag9_5_0_, playstored2_.packagename as package10_5_0_, playstored2_.version as version5_0_ from user_info userinfo0_ left outer join user_info_gameplaystore playstored1_ on userinfo0_.userId=playstored1_.user_info_userId left outer join gameplaystore playstored2_ on playstored1_.playstoreDtos_id=playstored2_.id where userinfo0_.userId=?
Static select for entity com.gamecard.dto.PlaystoreDto [NONE]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for entity com.gamecard.dto.PlaystoreDto [READ]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for entity com.gamecard.dto.PlaystoreDto [UPGRADE]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [UPGRADE_NOWAIT]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [FORCE]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [PESSIMISTIC_READ]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=? lock in share mode
Static select for entity com.gamecard.dto.PlaystoreDto [PESSIMISTIC_WRITE]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [PESSIMISTIC_FORCE_INCREMENT]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=? for update
Static select for entity com.gamecard.dto.PlaystoreDto [OPTIMISTIC]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for entity com.gamecard.dto.PlaystoreDto [OPTIMISTIC_FORCE_INCREMENT]: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for action ACTION_MERGE on entity com.gamecard.dto.PlaystoreDto: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for action ACTION_REFRESH on entity com.gamecard.dto.PlaystoreDto: select playstored0_.id as id5_0_, playstored0_.Size as Size5_0_, playstored0_.category as category5_0_, playstored0_.description as descript4_5_0_, playstored0_.gamedate as gamedate5_0_, playstored0_.gametittle as gametittle5_0_, playstored0_.iconLink as iconLink5_0_, playstored0_.isgame as isgame5_0_, playstored0_.jsonImageVedioLink as jsonImag9_5_0_, playstored0_.packagename as package10_5_0_, playstored0_.version as version5_0_ from gameplaystore playstored0_ where playstored0_.id=?
Static select for collection com.gamecard.dto.UserInfo.playstoreDtos: select playstored0_.user_info_userId as user1_6_1_, playstored0_.playstoreDtos_id as playstor2_1_, playstored1_.id as id5_0_, playstored1_.Size as Size5_0_, playstored1_.category as category5_0_, playstored1_.description as descript4_5_0_, playstored1_.gamedate as gamedate5_0_, playstored1_.gametittle as gametittle5_0_, playstored1_.iconLink as iconLink5_0_, playstored1_.isgame as isgame5_0_, playstored1_.jsonImageVedioLink as jsonImag9_5_0_, playstored1_.packagename as package10_5_0_, playstored1_.version as version5_0_ from user_info_gameplaystore playstored0_ inner join gameplaystore playstored1_ on playstored0_.playstoreDtos_id=playstored1_.id where playstored0_.user_info_userId=?
Registering SessionFactory: c4ddbb5d-464f-40ce-b1cc-db31e96819bd (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Instantiated session factory
HHH000228: Running hbm2ddl schema update
HHH000102: Fetching database metadata
HHH000396: Updating schema
Processing hbm.xml files
Process annotated classes
Processing fk mappings (*ToOne and JoinedSubclass)
Processing extends queue
Processing extends queue
Processing collection mappings
Processing native query and ResultSetMapping mappings
Processing association property references
Processing foreign key constraints
Resolving reference to class: com.gamecard.dto.PlaystoreDto
Resolving reference to class: com.gamecard.dto.UserInfo
HHH000261: Table found: game_center.gameplaystore
HHH000037: Columns: [gametittle, gamedate, size, packagename, description, jsonimagevediolink, id, category, iconlink, isgame, version]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: game_center.user_info
HHH000037: Columns: [android_version, userid, manufacturer]
HHH000108: Foreign keys: []
HHH000126: Indexes: [primary]
HHH000261: Table found: game_center.user_info_gameplaystore
HHH000037: Columns: [playstoredtos_id, user_info_userid]
HHH000108: Foreign keys: [fkf057399e139ec879, fkf057399e164c228a]
HHH000126: Indexes: [fkf057399e139ec879, fkf057399e164c228a]
Setting dialect [org.hibernate.dialect.MySQLDialect]
Setting dialect [org.hibernate.dialect.MySQLDialect]
HHH000232: Schema update complete
Checking 0 named HQL queries
Checking 0 named SQL queries
Statistics initialized [enabled=false]
parse() - HQL: from com.gamecard.dto.PlaystoreDto where packagename IN (:packageList)
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'gamecard'
    |           |  \-[IDENT] Node: 'dto'
    |           \-[IDENT] Node: 'PlaystoreDto'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[IDENT] Node: 'packagename'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'packageList'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : com.gamecard.dto.PlaystoreDto (<no alias>) -> playstored0_
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : packagename -> org.hibernate.type.StringType@661ae4f6
Resolved : {synthetic-alias}.packagename -> playstored0_.packagename
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} gameplaystore playstored0_ ) ( where ( in ( playstored0_.packagename {synthetic-alias} packagename ) ( inList ? ) ) ) )
Derived SELECT clause created.
Using FROM fragment [gameplaystore playstored0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (gameplaystore)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'playstored0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=gameplaystore,tableAlias=playstored0_,origin=null,columns={,className=com.gamecard.dto.PlaystoreDto}}}
    |  \-[SQL_TOKEN] SqlFragment: 'playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[playstored0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'gameplaystore playstored0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=gameplaystore,tableAlias=playstored0_,origin=null,columns={,className=com.gamecard.dto.PlaystoreDto}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'playstored0_.packagename' {propertyName=packagename,dereferenceType=ALL,propertyPath=packagename,path={synthetic-alias}.packagename,tableAlias=playstored0_,className=com.gamecard.dto.PlaystoreDto,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'packagename' {originalText=packagename}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=packageList, expectedType=org.hibernate.type.StringType@661ae4f6}

throwQueryException() : no errors
HQL: from com.gamecard.dto.PlaystoreDto where packagename IN (:packageList)
SQL: select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (?)
throwQueryException() : no errors
parse() - HQL: from com.gamecard.dto.PlaystoreDto where packagename IN (:packageList0_, :packageList1_, :packageList2_, :packageList3_, :packageList4_, :packageList5_)
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'gamecard'
    |           |  \-[IDENT] Node: 'dto'
    |           \-[IDENT] Node: 'PlaystoreDto'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[IDENT] Node: 'packagename'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'packageList0_'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'packageList1_'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'packageList2_'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'packageList3_'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'packageList4_'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'packageList5_'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : com.gamecard.dto.PlaystoreDto (<no alias>) -> playstored0_
Resolved : {synthetic-alias} -> {synthetic-alias}
getDataType() : packagename -> org.hibernate.type.StringType@661ae4f6
Resolved : {synthetic-alias}.packagename -> playstored0_.packagename
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} gameplaystore playstored0_ ) ( where ( in ( playstored0_.packagename {synthetic-alias} packagename ) ( inList ? ? ? ? ? ? ) ) ) )
Derived SELECT clause created.
Using FROM fragment [gameplaystore playstored0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (gameplaystore)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'playstored0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=gameplaystore,tableAlias=playstored0_,origin=null,columns={,className=com.gamecard.dto.PlaystoreDto}}}
    |  \-[SQL_TOKEN] SqlFragment: 'playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[playstored0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'gameplaystore playstored0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=gameplaystore,tableAlias=playstored0_,origin=null,columns={,className=com.gamecard.dto.PlaystoreDto}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[DOT] DotNode: 'playstored0_.packagename' {propertyName=packagename,dereferenceType=ALL,propertyPath=packagename,path={synthetic-alias}.packagename,tableAlias=playstored0_,className=com.gamecard.dto.PlaystoreDto,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'packagename' {originalText=packagename}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=packageList0_, expectedType=org.hibernate.type.StringType@661ae4f6}
             +-[NAMED_PARAM] ParameterNode: '?' {name=packageList1_, expectedType=org.hibernate.type.StringType@661ae4f6}
             +-[NAMED_PARAM] ParameterNode: '?' {name=packageList2_, expectedType=org.hibernate.type.StringType@661ae4f6}
             +-[NAMED_PARAM] ParameterNode: '?' {name=packageList3_, expectedType=org.hibernate.type.StringType@661ae4f6}
             +-[NAMED_PARAM] ParameterNode: '?' {name=packageList4_, expectedType=org.hibernate.type.StringType@661ae4f6}
             \-[NAMED_PARAM] ParameterNode: '?' {name=packageList5_, expectedType=org.hibernate.type.StringType@661ae4f6}

throwQueryException() : no errors
HQL: from com.gamecard.dto.PlaystoreDto where packagename IN (:packageList0_, :packageList1_, :packageList2_, :packageList3_, :packageList4_, :packageList5_)
SQL: select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
throwQueryException() : no errors
Obtaining JDBC connection
Obtained JDBC connection
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#5]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#67]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#68]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#70]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#135]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#137]
Resolving associations for [com.gamecard.dto.PlaystoreDto#5]
Done materializing entity [com.gamecard.dto.PlaystoreDto#5]
Resolving associations for [com.gamecard.dto.PlaystoreDto#67]
Done materializing entity [com.gamecard.dto.PlaystoreDto#67]
Resolving associations for [com.gamecard.dto.PlaystoreDto#68]
Done materializing entity [com.gamecard.dto.PlaystoreDto#68]
Resolving associations for [com.gamecard.dto.PlaystoreDto#70]
Done materializing entity [com.gamecard.dto.PlaystoreDto#70]
Resolving associations for [com.gamecard.dto.PlaystoreDto#135]
Done materializing entity [com.gamecard.dto.PlaystoreDto#135]
Resolving associations for [com.gamecard.dto.PlaystoreDto#137]
Done materializing entity [com.gamecard.dto.PlaystoreDto#137]
Initializing non-lazy collections
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#10]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#12]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#13]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#35]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#48]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#59]
Resolving associations for [com.gamecard.dto.PlaystoreDto#10]
Done materializing entity [com.gamecard.dto.PlaystoreDto#10]
Resolving associations for [com.gamecard.dto.PlaystoreDto#12]
Done materializing entity [com.gamecard.dto.PlaystoreDto#12]
Resolving associations for [com.gamecard.dto.PlaystoreDto#13]
Done materializing entity [com.gamecard.dto.PlaystoreDto#13]
Resolving associations for [com.gamecard.dto.PlaystoreDto#35]
Done materializing entity [com.gamecard.dto.PlaystoreDto#35]
Resolving associations for [com.gamecard.dto.PlaystoreDto#48]
Done materializing entity [com.gamecard.dto.PlaystoreDto#48]
Resolving associations for [com.gamecard.dto.PlaystoreDto#59]
Done materializing entity [com.gamecard.dto.PlaystoreDto#59]
Initializing non-lazy collections
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#5]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#67]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#68]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#70]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#135]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#137]
Initializing non-lazy collections
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#5]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#67]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#68]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#70]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#135]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#137]
Initializing non-lazy collections
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#5]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#67]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#68]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#70]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#135]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#137]
Initializing non-lazy collections
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#10]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#12]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#13]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#35]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#48]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#59]
Initializing non-lazy collections
select playstored0_.id as id0_, playstored0_.Size as Size0_, playstored0_.category as category0_, playstored0_.description as descript4_0_, playstored0_.gamedate as gamedate0_, playstored0_.gametittle as gametittle0_, playstored0_.iconLink as iconLink0_, playstored0_.isgame as isgame0_, playstored0_.jsonImageVedioLink as jsonImag9_0_, playstored0_.packagename as package10_0_, playstored0_.version as version0_ from gameplaystore playstored0_ where playstored0_.packagename in (? , ? , ? , ? , ? , ?)
Result set row: 0
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#5]
Result set row: 1
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#67]
Result set row: 2
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#68]
Result set row: 3
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#70]
Result set row: 4
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#135]
Result set row: 5
Result row: EntityKey[com.gamecard.dto.PlaystoreDto#137]
Initializing non-lazy collections
